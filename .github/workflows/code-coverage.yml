name: Code Coverage

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    services:
      etcd:
        image: quay.io/coreos/etcd:v3.5.0
        ports:
          - 2379:2379
          - 2380:2380
        env:
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_ADVERTISE_CLIENT_URLS: http://0.0.0.0:2379
        options: --health-cmd "etcdctl endpoint health" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          7.0.x
          8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Install Coverage Tools
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        dotnet tool install --global dotnet-coverage
    
    - name: Run Tests with Coverage
      run: |
        dotnet test dotnet-etcd.Tests/dotnet-etcd.Tests.csproj --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Generate Coverage Report
      run: |
        reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coveragereport -reporttypes:Html,Cobertura,TextSummary -classfilters:"-Authpb.*;-Etcdserverpb.*;-Mvccpb.*;-V3Electionpb.*;-V3Lockpb.*;-Versionpb.*;-Gogoproto.*"
        cat ./coveragereport/Summary.txt
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: ./coveragereport
    
    - name: Publish Coverage Report to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: ./coveragereport
        branch: gh-pages
        clean: true 
name: .NET Build, Test and Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-test-coverage:
    runs-on: ubuntu-latest
    
    services:
      etcd1:
        image: quay.io/coreos/etcd:v3.5.21
        ports:
          - 2379:2379
          - 2380:2380
        env:
          ETCD_NAME: etcd1
          ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd1:2380
          ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd1:2379
          ETCD_INITIAL_CLUSTER_TOKEN: etcd-cluster
          ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
          ETCD_INITIAL_CLUSTER_STATE: new

      etcd2:
        image: quay.io/coreos/etcd:v3.5.21
        ports:
          - 2381:2379
          - 2382:2380
        env:
          ETCD_NAME: etcd2
          ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd2:2380
          ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd2:2379
          ETCD_INITIAL_CLUSTER_TOKEN: etcd-cluster
          ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
          ETCD_INITIAL_CLUSTER_STATE: new

      etcd3:
        image: quay.io/coreos/etcd:v3.5.21
        ports:
          - 2383:2379
          - 2384:2380
        env:
          ETCD_NAME: etcd3
          ETCD_INITIAL_ADVERTISE_PEER_URLS: http://etcd3:2380
          ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
          ETCD_LISTEN_CLIENT_URLS: http://0.0.0.0:2379
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd3:2379
          ETCD_INITIAL_CLUSTER_TOKEN: etcd-cluster
          ETCD_INITIAL_CLUSTER: etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
          ETCD_INITIAL_CLUSTER_STATE: new

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          9.0.x
          8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Install Coverage Tools
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        dotnet tool install --global dotnet-coverage
    
    - name: Run Unit Tests
      run: dotnet test dotnet-etcd.Tests/dotnet-etcd.Tests.csproj --filter "Category=Unit" --no-build --verbosity normal
    
    - name: Run Integration Tests
      run: dotnet test dotnet-etcd.Tests/dotnet-etcd.Tests.csproj --filter "Category=Integration" --no-build --verbosity normal
    
    - name: Run Tests with Coverage
      run: |
        dotnet test dotnet-etcd.Tests/dotnet-etcd.Tests.csproj --filter "Category=Unit" --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage
    
    - name: Generate Coverage Report
      run: |
        reportgenerator -reports:./coverage/**/coverage.cobertura.xml -targetdir:./coveragereport -reporttypes:Html,Cobertura,TextSummary,Badges -classfilters:"-Authpb.*;-Etcdserverpb.*;-Mvccpb.*;-V3Electionpb.*;-V3Lockpb.*;-Versionpb.*;-Gogoproto.*"
        cat ./coveragereport/Summary.txt
    
    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coveragereport
        retention-days: 30
    
    - name: Add Coverage PR Comment
      uses: marocchino/sticky-pull-request-comment@v2
      if: github.event_name == 'pull_request'
      with:
        recreate: true
        path: ./coveragereport/Summary.txt
    
    - name: Publish Coverage Report to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: JamesIves/github-pages-deploy-action@v4.7.3
      with:
        folder: ./coveragereport
        branch: gh-pages
        clean: true
